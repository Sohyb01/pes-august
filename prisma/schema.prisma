// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Certificate {
  id String @id
  studentName String
  imgUrl String
}

model pesKidsApplicationData {
  // Default Fields
  applicationId Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  // Data from form
  DesiredCourse String
  // 
  ParentMobile String
  ParentEmail String
  // 
  StudentName String
  StudentAge Int
  // 
  StudentMobile String?
  StudentEmail String?
  // 
  DesiredMethod String?
  StudentHasLaptop String
}

model pesYouthApplicationData {
  // Default Fields
  applicationId Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  // Data from form
  DesiredCourse String
  // 
  StudentName String
  StudentAge Int
  // 
  StudentMobile String
  StudentEmail String
  // 
  StudentUniversity String
  StudentCollege String
  // 
  StudentSpeciality String?
  StudentHasLaptop String
}

model schoolPartnershipApplicationData {
  // Default Fields
  applicationId Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  // Data from form
  SchoolName String
  // 
  ApplierName String
  ApplierMobile String
  // 
  ApplierEmail String
  ApplierRoleInSchool String
  // DesiredEducationalStages String[]
}

model franchiseApplicationData {
  // Default Fields
  applicationId Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  // Data from form
  ApplierName String
  ApplierMobile String
  // 
  ApplierEmail String
  ApplierLocation String
  // 
  ApplierBudget String
  DesiredFranchiseLocation String
  // 
  ApplierProfession String?
  ApplierHeardAboutUs String?
  // 
  ApplierMotivation String?
  // 
  ApplierAdditionalMessage String?
}

model instructorApplicationData {
    // Default Fields
  applicationId Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  // Data from form
  ApplierName String
  ApplierAge Int
  // 
  ApplierGender String
  ApplierMobile String
  // 
  ApplierEmail String
  ApplierExtraSocialMediaProfileLinks String?
  // 
  ApplierIsGraduated String
  DesiredInstructorRole String
}

model User {
  email    String @unique
  password String
  role Role @default(USER)
}

enum OnlineOrOffline {
  Online
  Offline
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  Boy
  Girl
}
enum YesOrNo {
  Yes
  No
}

model pesKidsCourse {
  id Int @id @default(autoincrement())
  courseName String @unique
  courseDuration String
  courseImageURL String?
  isAvailable Boolean
}

model pesYouthCourse {
  id Int @id @default(autoincrement())
  courseName String @unique
  courseDuration String
  courseImageURL String?
  isAvailable Boolean @default(true)
}

model pesTeamMember {
  id Int @id @default(autoincrement())
  name String
  role String
  imgUrl String?
  facebookUrl String?
  instagramUrl String?
  linkedinUrl String?
}
